name: Java CICD

on: [push]

jobs:
  build_linux:
    runs-on: ubuntu-latest
    container:
      image: debian:8

    steps:

      - name: Install dependencies (g++, openjdk, maven, git)
        run: |
          apt-get update
          apt-get install build-essential openjdk-7-jre openjdk-7-jdk maven git -y
      - name: Checkout repository and submodules and build
        shell: bash
        run: |
          git clone $GITHUB_SERVER_URL/$GITHUB_REPOSITORY
          export GITHUB_REPOSITORY_NAME=$(echo $GITHUB_REPOSITORY  | awk '{split($0,a,"/"); print a[2]}')
          cd $GITHUB_REPOSITORY_NAME
          if [[ $GITHUB_REF_TYPE -eq branch ]]; then
            git checkout $GITHUB_REF_NAME
          else
            git checkout tags/$GITHUB_REF_NAME -b $GITHUB_REF_NAME-branch
          fi
          
          git submodule update --init --recursive
          mvn --batch-mode --update-snapshots "-Djar.finalName=jfasttext-linux" package
          mkdir /staging
          cp target/jfasttext-linux.jar /staging
      - uses: actions/upload-artifact@v3
        with:
          name: Package Linux
          path: /staging
  
  build_windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
      - name: Checkout submodules
        run: git submodule update --init --recursive
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Maven Windows
        run: mvn --batch-mode --update-snapshots "-Djar.finalName=jfasttext-windows" package 
      - run: mkdir staging && cp target/jfasttext-windows.jar staging
      - uses: actions/upload-artifact@v3
        with:
          name: Package Windows
          path: staging

  build_macosx:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
      - name: Checkout submodules
        run: git submodule update --init --recursive
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      
      - name: Build with Maven MacOS
        run: mvn --batch-mode --update-snapshots "-Djar.finalName=jfasttext-macosx" package
      - run: mkdir staging && cp target/jfasttext-macosx.jar staging
      - uses: actions/upload-artifact@v3
        with:
          name: Package MacOSX
          path: staging

  merge_build:
    runs-on: ubuntu-latest
    needs: [build_linux, build_windows, build_macosx]

    steps:
      - name: Download JAR Linux
        uses: actions/download-artifact@v3
        with:
          name: Package Linux
          path: ~/download
      - name: Download JAR Windows
        uses: actions/download-artifact@v3
        with:
          name: Package Windows
          path: ~/download
      - name: Download JAR MacOSX
        uses: actions/download-artifact@v3
        with:
          name: Package MacOSX
          path: ~/download
      - name: Checkout project
        uses: actions/checkout@v3
      - name: Copy pom
        run:
          cp pom.xml ~/download/pom.xml
      - name: Build merged jar
        shell: bash
        run: |
          cd ~/download
          ls -a
          unzip -o jfasttext-windows.jar 
          unzip -o jfasttext-macosx.jar 
          unzip -o jfasttext-linux.jar
          PROJECT_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo ${PROJECT_VERSION}
          zip -r jfasttext-${PROJECT_VERSION}-SNAPSHOT.jar com META-INF
          rm jfasttext-windows.jar 
          rm jfasttext-macosx.jar 
          rm jfasttext-linux.jar
          ls -a         
      - uses: actions/upload-artifact@v3
        with:
          name: Package multi-platform
          path: ~/download/*.jar
    
  deploy_snapshot:
    runs-on: ubuntu-latest
    needs: [merge_build]
    steps:
      - name: Download JAR Linux
        uses: actions/download-artifact@v3
        with:
          name: Package multi-platform
          path: ~/download
      - name: Set up Maven Central Repository
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - name: Checkout project
        uses: actions/checkout@v3
      - name: Copy pom
        run:
          cp pom.xml ~/download/pom.xml
      - name: Publish package
        shell: bash
        run: |
          cd ~/download
          PROJECT_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          mvn --batch-mode release:update-versions -DdevelopmentVersion=${PROJECT_VERSION}-SNAPSHOT
          mvn gpg:sign-and-deploy-file -Durl=https://s01.oss.sonatype.org/content/repositories/snapshots/ -DrepositoryId=ossrh -DpomFile=pom.xml -Dfile=jfasttext-${PROJECT_VERSION}-SNAPSHOT.jar
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}

  